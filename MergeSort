#include "pch.h"
#include <iostream>
#include <conio.h>

using namespace std;

#define max 100

class Sort {
public:
	virtual void setName(string sort) = 0;
	virtual void setArray(int n) = 0;
	virtual string getName() = 0;
};

class Merge : public Sort{
public:
	string name;
	int* arr;
	int n; 
	void setName(string sort) override;
	void setArray(int n) override;
	string getName() override;
	void Sort(int l, int r);
	void PrintArray();
};

void Merge::setName(string sort) {
	name = sort;
};

void Merge::setArray(int n) {
	this->name = n;
	for (int i = 0; i < n; i++) {
		cout << "Array[" << i << "] - ";
		cin >> arr[i];
		cout << endl;
	}
};

string Merge::getName() {
	return name;
};

void Merge::Sort(int l, int r) {
	if (r == l)
		return;
	if (r - l == 1) {
		if (arr[r] < arr[l])
			swap(arr[r], arr[l]);
		return;
	}
	int m = (r + l) / 2;
	Sort(l, m);
	Sort(m + 1, r);
	int buf[max];
	int xl = l;
	int xr = m + 1;
	int cur = 0;
	while (r - l + 1 != cur) {
		if (xl > m)
			buf[cur++] = arr[xr++];
		else if (xr > r)
			buf[cur++] = arr[xl++];
		else if (arr[xl] > arr[xr])
			buf[cur++] = arr[xr++];
		else buf[cur++] = arr[xl++];

	}
	for (int i = 0; i < cur; i++)
		arr[i + l] = buf[i];
};

void Merge::PrintArray(){
	for (int i = 0; i < n; i++)
		cout << arr[i] << " ";
};

int main(){
	Merge merge1;

	merge1.setName("MergeSort");
	int n;
	cout << "Number of array elements - ";
	cin >> n;
	cout << endl;
	merge1.setArray(n);
	merge1.PrintArray();
	merge1.getName();
	merge1.Sort(0, n - 1);
	merge1.PrintArray();
}
